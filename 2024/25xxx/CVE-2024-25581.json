{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.1",
    "cveMetadata": {
        "cveId": "CVE-2024-25581",
        "assignerOrgId": "8ce71d90-2354-404b-a86e-bec2cc4e6981",
        "state": "PUBLISHED",
        "assignerShortName": "OX",
        "dateReserved": "2024-02-08T08:15:37.204Z",
        "datePublished": "2024-05-13T11:49:24.500Z",
        "dateUpdated": "2024-05-13T11:49:24.500Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "collectionURL": "https://repo.powerdns.com/",
                    "defaultStatus": "unaffected",
                    "modules": [
                        "dns-over-https"
                    ],
                    "packageName": "dnsdist",
                    "product": "DNSdist",
                    "repo": "https://github.com/PowerDNS/pdns",
                    "vendor": "PowerDNS",
                    "versions": [
                        {
                            "status": "affected",
                            "version": "1.9.0"
                        },
                        {
                            "status": "affected",
                            "version": "1.9.1"
                        },
                        {
                            "status": "affected",
                            "version": "1.9.2"
                        },
                        {
                            "status": "affected",
                            "version": "1.9.3"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "value": "Daniel Stirnimann from Switch"
                }
            ],
            "datePublic": "2024-05-13T10:00:00.000Z",
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<p>When incoming DNS over HTTPS support is enabled using the nghttp2 provider, and queries are routed to a tcp-only or DNS over TLS backend, an attacker can trigger an assertion failure in DNSdist by sending a request for a zone transfer (AXFR or IXFR) over DNS over HTTPS, causing the process to stop and thus leading to a Denial of Service. DNS over HTTPS is not enabled by default, and backends are using plain DNS (Do53) by default.</p>"
                        }
                    ],
                    "value": "When incoming DNS over HTTPS support is enabled using the nghttp2 provider, and queries are routed to a tcp-only or DNS over TLS backend, an attacker can trigger an assertion failure in DNSdist by sending a request for a zone transfer (AXFR or IXFR) over DNS over HTTPS, causing the process to stop and thus leading to a Denial of Service. DNS over HTTPS is not enabled by default, and backends are using plain DNS (Do53) by default.\n\n"
                }
            ],
            "impacts": [
                {
                    "capecId": "CAPEC-212",
                    "descriptions": [
                        {
                            "lang": "en",
                            "value": "CAPEC-212 Functionality Misuse"
                        }
                    ]
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 7.5,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                        "version": "3.1"
                    },
                    "format": "CVSS",
                    "scenarios": [
                        {
                            "lang": "en",
                            "value": "GENERAL"
                        }
                    ]
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-20",
                            "description": "CWE-20 Improper Input Validation",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "8ce71d90-2354-404b-a86e-bec2cc4e6981",
                "shortName": "OX",
                "dateUpdated": "2024-05-13T11:49:24.500Z"
            },
            "references": [
                {
                    "url": "https://dnsdist.org/security-advisories/powerdns-advisory-for-dnsdist-2024-03.html"
                }
            ],
            "source": {
                "advisory": "PowerDNS Security Advisory 2024-03",
                "discovery": "EXTERNAL"
            },
            "title": "Transfer requests received over DoH can lead to a denial of service in DNSdist",
            "workarounds": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<p>Option 1: refuse incoming XFR requests via a DNSdist rule: addAction(OrRule({QTypeRule(DNSQType.AXFR), QTypeRule(DNSQType.IXFR)}), RCodeAction(DNSRCode.REFUSED)). Option 2: switch to the legacy h2o provider by setting library='h2o' in the addDOHLocal directive</p>"
                        }
                    ],
                    "value": "Option 1: refuse incoming XFR requests via a DNSdist rule: addAction(OrRule({QTypeRule(DNSQType.AXFR), QTypeRule(DNSQType.IXFR)}), RCodeAction(DNSRCode.REFUSED)). Option 2: switch to the legacy h2o provider by setting library='h2o' in the addDOHLocal directive\n\n"
                }
            ],
            "x_generator": {
                "engine": "Vulnogram 0.1.0-dev"
            }
        }
    }
}
