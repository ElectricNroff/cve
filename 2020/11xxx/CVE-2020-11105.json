{
    "containers": {
        "cna": {
            "affected": [
                {
                    "product": "n/a",
                    "vendor": "n/a",
                    "versions": [
                        {
                            "status": "affected",
                            "version": "n/a"
                        }
                    ]
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "value": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests."
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "description": "n/a",
                            "lang": "en",
                            "type": "text"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "dateUpdated": "2020-03-30T21:30:10",
                "orgId": "8254265b-2729-46b6-b9e3-3dfca2d5bfca",
                "shortName": "mitre"
            },
            "references": [
                {
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/USCiLab/cereal/issues/636"
                }
            ]
        }
    },
    "cveMetadata": {
        "assignerOrgId": "8254265b-2729-46b6-b9e3-3dfca2d5bfca",
        "assignerShortName": "mitre",
        "cveId": "CVE-2020-11105",
        "datePublished": "2020-03-30T21:30:10",
        "dateReserved": "2020-03-30T00:00:00",
        "dateUpdated": "2020-03-30T21:30:10",
        "state": "PUBLISHED"
    },
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0"
}
